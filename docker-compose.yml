services:
  backend-dev:
    container_name: backend-dev
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/src:/app/src:ro
      - ./backend/test:/app/test:ro
    command: npm run dev
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend-dev:
    container_name: frontend-dev
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://backend-dev:3000
    volumes:
      - ./frontend:/app:rw
      - /app/node_modules
    depends_on:
      backend-dev:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app-network:
    driver: bridge